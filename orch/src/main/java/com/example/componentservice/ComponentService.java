
package com.example.componentservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ComponentService", targetNamespace = "http://componentservice.example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ComponentService {


    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addComponent", targetNamespace = "http://componentservice.example.com/", className = "com.example.componentservice.AddComponent")
    @ResponseWrapper(localName = "addComponentResponse", targetNamespace = "http://componentservice.example.com/", className = "com.example.componentservice.AddComponentResponse")
    public void addComponent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.example.componentservice.Component
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComponent", targetNamespace = "http://componentservice.example.com/", className = "com.example.componentservice.GetComponent")
    @ResponseWrapper(localName = "getComponentResponse", targetNamespace = "http://componentservice.example.com/", className = "com.example.componentservice.GetComponentResponse")
    public Component getComponent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "registerComponent", targetNamespace = "http://componentservice.example.com/", className = "com.example.componentservice.RegisterComponent")
    @ResponseWrapper(localName = "registerComponentResponse", targetNamespace = "http://componentservice.example.com/", className = "com.example.componentservice.RegisterComponentResponse")
    public void registerComponent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Component arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkInventory", targetNamespace = "http://componentservice.example.com/", className = "com.example.componentservice.CheckInventory")
    @ResponseWrapper(localName = "checkInventoryResponse", targetNamespace = "http://componentservice.example.com/", className = "com.example.componentservice.CheckInventoryResponse")
    public boolean checkInventory(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

}
